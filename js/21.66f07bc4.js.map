{"version":3,"file":"js/21.66f07bc4.js","mappings":"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","sources":["webpack://el-table-virtual-scroll/./src/a-virtual-table.vue","webpack://el-table-virtual-scroll/src/a-virtual-table.vue","webpack://el-table-virtual-scroll/./src/a-virtual-table.vue?86cf","webpack://el-table-virtual-scroll/./src/a-virtual-table.vue?a457","webpack://el-table-virtual-scroll/./src/views/HeaderDemo.vue","webpack://el-table-virtual-scroll/src/views/HeaderDemo.vue","webpack://el-table-virtual-scroll/./src/views/HeaderDemo.vue?9666","webpack://el-table-virtual-scroll/./src/views/HeaderDemo.vue?74ae","webpack://el-table-virtual-scroll/./src/utils.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('a-table',_vm._g(_vm._b({attrs:{\"columns\":_vm.tableColumns,\"data-source\":_vm.renderData},scopedSlots:_vm._u([_vm._l((Object.keys(_vm.$scopedSlots)),function(slot){return {key:slot,fn:function(text){return [_vm._t(slot,null,null,typeof text === 'object' ? text : {text})]}}})],null,true)},'a-table',_vm.$attrs,false),_vm.$listeners))\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <a-table\n    v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n    :columns=\"tableColumns\"\n    :data-source=\"renderData\">\n    <template v-for=\"slot in Object.keys($scopedSlots)\" :slot=\"slot\" slot-scope=\"text\">\n      <slot :name=\"slot\" v-bind=\"typeof text === 'object' ? text : {text}\"></slot>\n    </template>\n  </a-table>\n</template>\n\n<script>\nimport throttle from 'lodash/throttle'\n\n// 判断是否是滚动容器\nfunction isScroller (el) {\n  const style = window.getComputedStyle(el, null)\n  const scrollValues = ['auto', 'scroll']\n  return scrollValues.includes(style.overflow) || scrollValues.includes(style['overflow-y'])\n}\n\n// 获取父层滚动容器\nfunction getParentScroller (el) {\n  let parent = el\n  while (parent) {\n    if ([window, document, document.documentElement].includes(parent)) {\n      return window\n    }\n    if (isScroller(parent)) {\n      return parent\n    }\n    parent = parent.parentNode\n  }\n\n  return parent || window\n}\n\n// 获取容器滚动位置\nfunction getScrollTop (el) {\n  return el === window ? window.pageYOffset : el.scrollTop\n}\n\n// 获取容器高度\nfunction getOffsetHeight (el) {\n  return el === window ? window.innerHeight : el.offsetHeight\n}\n\nexport default {\n  inheritAttrs: false,\n  name: 'a-virtual-table',\n  props: {\n    dataSource: {\n      type: Array,\n      default: () => []\n    },\n    columns: {\n      type: Array,\n      default: () => []\n    },\n    // key值，data数据中的唯一id\n    keyProp: {\n      type: String,\n      default: 'id'\n    },\n    // 每一行的预估高度\n    itemSize: {\n      type: Number,\n      default: 60\n    },\n    // 指定滚动容器(TODO:有bug)\n    // scrollBox: {\n    //   type: String\n    // },\n    // 顶部和底部缓冲区域，值越大显示表格的行数越多\n    buffer: {\n      type: Number,\n      default: 50\n    },\n    // 滚动事件的节流时间\n    throttleTime: {\n      type: Number,\n      default: 10\n    },\n    // 是否获取表格行动态高度\n    dynamic: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      sizes: {}, // 尺寸映射（依赖响应式）\n      renderData: [],\n      // 兼容多选\n      isCheckedAll: false, // 全选\n      isCheckedImn: false // 控制半选样式\n    }\n  },\n  computed: {\n    tableColumns () {\n      return this.columns.map(column => {\n        // 兼容多选\n        if (column.type === 'selection') {\n          return {\n            title: () => {\n              return (\n                <a-checkbox\n                  checked={this.isCheckedAll}\n                  indeterminate={this.isCheckedImn}\n                  onchange={() => this.onCheckAllRows(!this.isCheckedAll)}>\n                </a-checkbox>\n              )\n            },\n            customRender: (text, row) => {\n              return (\n                <a-checkbox\n                  checked={row.$v_checked}\n                  onchange={() => this.onCheckRow(row, !row.$v_checked)}>\n                </a-checkbox>\n              )\n            },\n            width: 60,\n            ...column\n          }\n        } else if (column.index) {\n          // 兼容索引\n          return {\n            customRender: (text, row, index) => {\n              const curIndex = this.start + index\n              return typeof column.index === 'function' ? column.index(curIndex) : curIndex + 1\n            },\n            ...column\n          }\n        }\n        return column\n      })\n    },\n    // 计算出每个item（的key值）到滚动容器顶部的距离\n    offsetMap ({ keyProp, itemSize, sizes, dataSource }) {\n      if (!this.dynamic) return {}\n\n      const res = {}\n      let total = 0\n      for (let i = 0; i < dataSource.length; i++) {\n        const key = dataSource[i][keyProp]\n        res[key] = total\n\n        const curSize = sizes[key]\n        const size = typeof curSize === 'number' ? curSize : itemSize\n        total += size\n      }\n      return res\n    }\n  },\n  methods: {\n    // 初始化数据\n    initData () {\n      this.scroller = this.getScroller()\n\n      // 首次需要执行2次handleScroll：因为第一次计算renderData时表格高度未确认导致计算不准确；第二次执行时，表格高度确认后，计算renderData是准确的\n      this.handleScroll()\n      this.$nextTick(() => {\n        this.handleScroll()\n      })\n      // 监听事件\n      this.onScroll = throttle(this.handleScroll, this.throttleTime)\n      this.scroller.addEventListener('scroll', this.onScroll)\n      window.addEventListener('resize', this.onScroll)\n    },\n\n    // 获取滚动元素\n    getScroller () {\n      let el\n      if (this.scrollBox) {\n        el = document.querySelector(this.scrollBox)\n        if (!el) throw new Error(` scrollBox prop: '${this.scrollBox}' is not a valid selector`)\n        if (!isScroller(el)) console.warn(`Warning! scrollBox prop: '${this.scrollBox}' is not a scroll element`)\n        return el\n      }\n      // 如果表格是固定高度，则获取表格内的滚动节点，否则获取父层滚动节点\n      if (this.$attrs.scroll && this.$attrs.scroll.y) {\n        return this.$el.querySelector('.ant-table-body')\n      } else {\n        return getParentScroller(this.$el)\n      }\n    },\n\n    // 处理滚动事件\n    handleScroll () {\n      // 更新当前尺寸（高度）\n      this.updateSizes()\n      // 计算renderData\n      this.calcRenderData()\n      // 计算位置\n      this.calcPosition()\n    },\n\n    // 更新尺寸（高度）\n    updateSizes () {\n      if (!this.dynamic) return\n\n      const rows = this.$el.querySelectorAll('.ant-table-body .ant-table-tbody .ant-table-row')\n      Array.from(rows).forEach((row, index) => {\n        const item = this.renderData[index]\n        if (!item) return\n\n        // 计算表格行的高度\n        let offsetHeight = row.offsetHeight\n        const key = item[this.keyProp]\n        if (this.sizes[key] !== offsetHeight) {\n          this.$set(this.sizes, key, offsetHeight)\n        }\n      })\n    },\n\n    // 计算只在视图上渲染的数据\n    calcRenderData () {\n      const { scroller, buffer, dataSource: data } = this\n      // 计算可视范围顶部、底部\n      const top = getScrollTop(scroller) - buffer\n      const bottom = getScrollTop(scroller) + getOffsetHeight(scroller) + buffer\n\n      let start\n      let end\n      if (!this.dynamic) {\n        start = top <= 0 ? 0 : Math.floor(top / this.itemSize)\n        end = bottom <= 0 ? 0 : Math.ceil(bottom / this.itemSize)\n      } else {\n        // 二分法计算可视范围内的开始的第一个内容\n        let l = 0\n        let r = data.length - 1\n        let mid = 0\n        while (l <= r) {\n          mid = Math.floor((l + r) / 2)\n          const midVal = this.getItemOffsetTop(mid)\n          if (midVal < top) {\n            const midNextVal = this.getItemOffsetTop(mid + 1)\n            if (midNextVal > top) break\n            l = mid + 1\n          } else {\n            r = mid - 1\n          }\n        }\n\n        // 计算渲染内容的开始、结束索引\n        start = mid\n        end = data.length - 1\n        for (let i = start + 1; i < data.length; i++) {\n          const offsetTop = this.getItemOffsetTop(i)\n          if (offsetTop >= bottom) {\n            end = i\n            break\n          }\n        }\n      }\n\n      // 开始索引始终保持偶数，如果为奇数，则加1使其保持偶数【确保表格行的偶数数一致，不会导致斑马纹乱序显示】\n      if (start % 2) {\n        start = start - 1\n      }\n      this.top = top\n      this.bottom = bottom\n      this.start = start\n      this.end = end\n      this.renderData = data.slice(start, end + 1)\n      this.$emit('change', this.renderData, this.start, this.end)\n    },\n\n    // 计算位置\n    calcPosition () {\n      const last = this.dataSource.length - 1\n      // 计算内容总高度\n      const wrapHeight = this.getItemOffsetTop(last) + this.getItemSize(last)\n      // 计算当前滚动位置需要撑起的高度\n      const offsetTop = this.getItemOffsetTop(this.start)\n\n      // 设置dom位置\n      const classNames = ['.ant-table-scroll .ant-table-body', '.ant-table-fixed-left .ant-table-body-inner', '.ant-table-fixed-right .ant-table-body-inner']\n      // const classNames = []\n      classNames.forEach(className => {\n        const el = this.$el.querySelector(className)\n        if (!el) return\n\n        // 创建wrapEl、innerEl\n        if (!el.wrapEl) {\n          const wrapEl = document.createElement('div')\n          const innerEl = document.createElement('div')\n          // 此处设置display为'inline-block'，是让div宽度等于表格的宽度，修复x轴滚动时右边固定列没有阴影的bug\n          wrapEl.style.display = 'inline-block'\n          innerEl.style.display = 'inline-block'\n          wrapEl.appendChild(innerEl)\n          innerEl.appendChild(el.children[0])\n          el.insertBefore(wrapEl, el.firstChild)\n          el.wrapEl = wrapEl\n          el.innerEl = innerEl\n        }\n\n        if (el.wrapEl) {\n          // 设置高度\n          el.wrapEl.style.height = wrapHeight + 'px'\n          // 设置transform撑起高度\n          el.innerEl.style.transform = `translateY(${offsetTop}px)`\n          // 设置paddingTop撑起高度\n          // el.innerEl.style.paddingTop = `${offsetTop}px`\n        }\n      })\n    },\n\n    // 获取某条数据offsetTop\n    getItemOffsetTop (index) {\n      if (!this.dynamic) {\n        return this.itemSize * index\n      }\n\n      const item = this.dataSource[index]\n      if (item) {\n        return this.offsetMap[item[this.keyProp]] || 0\n      }\n      return 0\n    },\n\n    // 获取某条数据的尺寸\n    getItemSize (index) {\n      if (index <= -1) return 0\n      const item = this.dataSource[index]\n      if (item) {\n        const key = item[this.keyProp]\n        return this.sizes[key] || this.itemSize\n      }\n      return this.itemSize\n    },\n\n    // 【外部调用】更新\n    update () {\n      // console.log('update')\n      this.handleScroll()\n    },\n\n    // 多选：兼容表格clearSelection方法\n    clearSelection () {\n      this.dataSource.forEach(row => this.$set(row, '$v_checked', false))\n      this.isCheckedAll = false\n      this.isCheckedImn = false\n      this.emitSelectionChange()\n    },\n\n    // 多选：兼容表格toggleRowSelection方法\n    toggleRowSelection (row, selected) {\n      const val = typeof selected === 'boolean' ? selected : !row.$v_checked\n      this.onCheckRow(row, val)\n    },\n\n    // 多选：兼容表格selection-change事件\n    emitSelectionChange () {\n      const selection = this.dataSource.filter(row => row.$v_checked)\n      this.$emit('selection-change', selection)\n    },\n\n    // 兼容多选：选择表格所有行\n    onCheckAllRows (val) {\n      val = this.isCheckedImn ? true : val\n      this.dataSource.forEach(row => this.$set(row, '$v_checked', val))\n      this.isCheckedAll = val\n      this.isCheckedImn = false\n      this.emitSelectionChange()\n    },\n\n    // 兼容多选：选择表格某行\n    onCheckRow (row, value) {\n      this.$set(row, '$v_checked', value)\n      const checkedLen = this.dataSource.filter(row => row.$v_checked === true).length\n      if (checkedLen === 0) {\n        this.isCheckedAll = false\n        this.isCheckedImn = false\n      } else if (checkedLen === this.dataSource.length) {\n        this.isCheckedAll = true\n        this.isCheckedImn = false\n      } else {\n        this.isCheckedAll = false\n        this.isCheckedImn = true\n      }\n      this.emitSelectionChange()\n    }\n  },\n  created () {\n    this.$nextTick(() => {\n      this.initData()\n    })\n  },\n  beforeDestroy () {\n    if (this.scroller) {\n      this.scroller.removeEventListener('scroll', this.onScroll)\n      window.removeEventListener('resize', this.onScroll)\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n// /deep/ .ant-table-scroll-position-right {\n//   .ant-table-fixed-right {\n//     box-shadow: -6px 0 6px -4px rgb(0 0 0 / 15%);\n//   }\n// }\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./a-virtual-table.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./a-virtual-table.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./a-virtual-table.vue?vue&type=template&id=de25045e&scoped=true&\"\nimport script from \"./a-virtual-table.vue?vue&type=script&lang=js&\"\nexport * from \"./a-virtual-table.vue?vue&type=script&lang=js&\"\nimport style0 from \"./a-virtual-table.vue?vue&type=style&index=0&id=de25045e&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"de25045e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('a-virtual-table',{attrs:{\"bordered\":\"\",\"columns\":_vm.columns,\"data-source\":_vm.list,\"itemSize\":54,\"keyProp\":\"id\",\"row-key\":\"id\",\"pagination\":false,\"scroll\":{ x: 1300, y: 800 }},scopedSlots:_vm._u([{key:\"name\",fn:function({text}){return _c('a',{},[_vm._v(_vm._s(text)+\"===\")])}}])})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <a-virtual-table\n      bordered\n      :columns=\"columns\"\n      :data-source=\"list\"\n      :itemSize=\"54\"\n      keyProp=\"id\"\n      row-key=\"id\"\n      :pagination=\"false\"\n      :scroll=\"{ x: 1300, y: 800 }\">\n      <a slot=\"name\" slot-scope=\"{text}\">{{ text }}===</a>\n    </a-virtual-table>\n  </div>\n</template>\n\n<script>\nimport { mockData } from '@/utils'\nimport AVirtualTable from '../a-virtual-table'\n\nexport default {\n  components: {\n    AVirtualTable\n  },\n  data () {\n    return {\n      selectedRowKeys: [],\n      columns: [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          scopedSlots: { customRender: 'name' },\n          fixed: 'left',\n          width: 200\n        },\n        {\n          title: '多表头',\n          children: [\n            {\n              title: 'id',\n              dataIndex: 'id',\n              key: 'id',\n              width: 100\n            },\n            {\n              title: 'text',\n              dataIndex: 'text',\n              key: 'text',\n              width: 400\n            }\n          ]\n        },\n        {\n          title: 'Address',\n          dataIndex: 'address',\n          key: 'address 1',\n          ellipsis: true,\n          width: 400\n        },\n        {\n          title: 'Long Column Long Column Long Column',\n          dataIndex: 'address',\n          key: 'address 2',\n          ellipsis: true,\n          width: 300\n        },\n        {\n          title: 'Long Column Long Column',\n          dataIndex: 'address',\n          key: 'address 3',\n          ellipsis: true,\n          width: 300\n        },\n        {\n          title: 'Long Column',\n          dataIndex: 'address',\n          key: 'address 4',\n          ellipsis: true,\n          width: 300,\n          fixed: 'right',\n        }\n      ],\n      list: mockData(0, 2000)\n    }\n  },\n  methods: {\n  }\n}\n</script>\n\n<style lang='less' scoped>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HeaderDemo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HeaderDemo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HeaderDemo.vue?vue&type=template&id=143965c4&scoped=true&\"\nimport script from \"./HeaderDemo.vue?vue&type=script&lang=js&\"\nexport * from \"./HeaderDemo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"143965c4\",\n  null\n  \n)\n\nexport default component.exports","export function mockData (start, end) {\n  const list = []\n  for (let i = 0; i < end; i++) {\n    const text = getContent()\n    const text2 = getContent()\n    list.push({\n      id: start++,\n      index: i,\n      text,\n      text2,\n      show: false,\n      checked: false,\n      date: new Date().toLocaleString(),\n      name: '王小虎',\n      province: '上海',\n      city: '普陀区',\n      address: '上海市普陀区金沙江路 1518 弄',\n      zip: 200333,\n      category: '江浙小吃、小吃零食',\n      desc: '荷兰优质淡奶，奶香浓而不腻',\n      shop: '王小虎夫妻店',\n      shopId: '10333',\n      count: genRandomVal(0, 1000)\n    })\n  }\n  return list\n}\n\nfunction genRandomVal (min, max) { \n  return Math.floor(Math.random() * (max - min)) + min \n} \n    \nfunction getContent () {\n  const content = [\n    '这是一条测试数据',\n    '君不见黄河之水天上来，奔流到海不复回。',\n    '十年生死两茫茫',\n    '寻寻觅觅，冷冷清清，凄凄惨惨戚戚。',\n    '桃花坞里桃花庵，桃花庵里桃花仙；桃花仙人种桃树，又摘桃花卖酒钱。',\n    '明月几时有，把酒问青天。',\n    '槛菊愁烟兰泣露，罗幕轻寒，',\n    '寒蝉凄切，对长亭晚，骤雨初歇。都门帐饮无绪，留恋处，兰舟催发。执手相看泪眼，竟无语凝噎。念去去，千里烟波，暮霭沉沉楚天阔。多情自古伤离别，更那堪冷落清秋节！今宵酒醒何处？杨柳岸，晓风残月。此去经年，应是良辰好景虚设。便纵有千种风情，更与何人说？',\n    '红豆生南国，春来发几枝。',\n    '黄鹂'\n  ]\n  const i = Math.floor(Math.random() * 10)\n  return content[i]\n}"],"names":["render","_vm","this","_c","_self","_g","_b","attrs","tableColumns","renderData","scopedSlots","_u","_l","Object","keys","$scopedSlots","slot","key","fn","text","_t","$attrs","$listeners","staticRenderFns","isScroller","getParentScroller","parent","getScrollTop","getOffsetHeight","inheritAttrs","name","props","dataSource","type","default","columns","keyProp","itemSize","buffer","throttleTime","dynamic","data","sizes","isCheckedAll","isCheckedImn","computed","title","customRender","row","width","offsetMap","res","total","methods","initData","window","getScroller","el","handleScroll","updateSizes","Array","calcRenderData","scroller","mid","l","r","start","end","calcPosition","classNames","wrapEl","innerEl","getItemOffsetTop","getItemSize","update","clearSelection","toggleRowSelection","emitSelectionChange","onCheckAllRows","val","onCheckRow","created","beforeDestroy","component","list","x","y","_v","_s","components","AVirtualTable","selectedRowKeys","dataIndex","fixed","children","ellipsis","mockData","i","getContent","text2","push","id","index","show","checked","date","Date","toLocaleString","province","city","address","zip","category","desc","shop","shopId","count","genRandomVal","min","max","Math","floor","random","content"],"sourceRoot":""}