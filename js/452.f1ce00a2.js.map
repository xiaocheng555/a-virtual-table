{"version":3,"file":"js/452.f1ce00a2.js","mappings":"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","sources":["webpack://a-virtual-table-demo/./src/views/VTreeDemo2.vue","webpack://a-virtual-table-demo/src/views/VTreeDemo2.vue","webpack://a-virtual-table-demo/./src/views/VTreeDemo2.vue?f500","webpack://a-virtual-table-demo/./src/views/VTreeDemo2.vue?7aa5"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',[_c('el-button',{on:{\"click\":_vm.expand1}},[_vm._v(\"展开第一层\")]),_c('el-button',{on:{\"click\":_vm.expand2}},[_vm._v(\"展开第二层\")]),_c('el-button',{on:{\"click\":_vm.expandAll}},[_vm._v(\"展开全部\")]),_c('el-button',{on:{\"click\":_vm.unexpandAll}},[_vm._v(\"收起全部\")]),_c('el-button',{on:{\"click\":_vm.unexpandTarget}},[_vm._v(\"展开目标路径\")])],1),_c('a-virtual-table',{ref:\"virtualTable\",attrs:{\"isTree\":\"\",\"columns\":_vm.columns,\"data-source\":_vm.treeData,\"itemSize\":54,\"row-key\":\"id\",\"keyProp\":\"id\",\"childrenColumnName\":\"\",\"rowClassName\":_vm.getRowClassName,\"scroll\":{ x: 1300, y: 600 }},on:{\"update:dataSource\":function($event){_vm.treeData=$event},\"update:data-source\":function($event){_vm.treeData=$event}},scopedSlots:_vm._u([{key:\"tree\",fn:function({record}){return [_c('a-virtual-tree',{ref:\"virtualTree\",attrs:{\"row\":record,\"load\":_vm.onload}},[_vm._v(\" \"+_vm._s(record.id)+\" \")])]}},{key:\"desc\",fn:function({ record }){return [(record['describe'])?_c('div',{staticStyle:{\"line-height\":\"1.2em\"}},[_c('div',[_vm._v(\" \"+_vm._s(record[\"product\"])+\" \")]),_c('div',{staticStyle:{\"color\":\"grey\",\"font-size\":\"12px\"}},[_vm._v(\" \"+_vm._s(record[\"describe\"])+\" \")])]):_c('div',{staticStyle:{\"white-space\":\"nowrap\"}},[_vm._v(\" \"+_vm._s(record[\"product\"])+\" \")])]}}])})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div>\n      <el-button @click=\"expand1\">展开第一层</el-button>\n      <el-button @click=\"expand2\">展开第二层</el-button>\n      <el-button @click=\"expandAll\">展开全部</el-button>\n      <el-button @click=\"unexpandAll\">收起全部</el-button>\n      <el-button @click=\"unexpandTarget\">展开目标路径</el-button>\n    </div>\n    <a-virtual-table\n      ref=\"virtualTable\"\n      isTree\n      :columns=\"columns\"\n      :data-source.sync=\"treeData\"\n      :itemSize=\"54\"\n      row-key=\"id\"\n      keyProp=\"id\"\n      childrenColumnName=''\n      :rowClassName=\"getRowClassName\"\n      :scroll=\"{ x: 1300, y: 600 }\">\n      <template slot=\"tree\" slot-scope=\"{record}\">\n        <a-virtual-tree ref=\"virtualTree\" :row=\"record\" :load=\"onload\">\n          {{ record.id }}\n        </a-virtual-tree>\n      </template>\n      <template slot=\"desc\" slot-scope=\"{ record }\">\n        <div v-if=\"record['describe']\" style=\"line-height: 1.2em\">\n          <div>\n            {{ record[\"product\"] }}\n          </div>\n          <div style=\"color: grey; font-size: 12px\">\n            {{ record[\"describe\"] }}\n          </div>\n        </div>\n        <div v-else style=\"white-space: nowrap\">\n          {{ record[\"product\"] }}\n        </div>\n      </template>\n    </a-virtual-table>\n  </div>\n</template>\n\n<script>\nimport AVirtualTable, { AVirtualTree } from 'a-virtual-table'\nimport cloneDeep from 'lodash/cloneDeep'\nimport datamap from '../datamap.json'\n\nexport default {\n  components: {\n    AVirtualTable,\n    AVirtualTree\n  },\n  data () {\n    return {\n      columns: [\n        {\n          scopedSlots: { customRender: 'tree' },\n          width: 200\n        },\n        {\n          scopedSlots: { customRender: 'desc' },\n          width: 200\n        },\n        {\n          title: 'id',\n          dataIndex: 'id',\n          key: 'id',\n          width: 100\n        },\n        {\n          title: '随机名',\n          dataIndex: 'database',\n          key: 'database',\n          width: 100\n        },\n        {\n          title: '排序',\n          dataIndex: 'rank',\n          key: 'rank',\n          width: 40\n        },\n        {\n          title: '数据',\n          dataIndex: 'status',\n          key: 'status',\n          width: 60\n        }\n      ],\n      treeData: [],\n      highlightKey: ''\n    }\n  },\n  mounted () {\n    this.initData()\n  },\n  methods: {\n    getRowClassName (row) {\n      return this.highlightKey === row.id ? 'highlight-row' : ''\n    },\n    initData () {\n      this.dataMap = datamap\n      this.treeData = [\n        {\n          id: \"49__@@__1\",\n          product: \"产品线\",\n          productId: 49,\n          parent: null,\n          isRoot: true,\n          $v_level: 1\n        },\n        {\n          id: \"-1__@@__4690\",\n          product: \"未归类头部表\",\n          productId: -1,\n          parent: null,\n          isRoot: true,\n          $v_level: 1\n        }\n      ]\n    },\n    onload (row, resolve) {\n      setTimeout(() => {\n        resolve(cloneDeep(this.dataMap[row.id] || []))\n      }, 200)\n    },\n    expand (level) {\n      const expandKeys = this.treeData.filter(item => item.$v_level === level).map(item => item.id)\n      return this.$refs.virtualTree.expand(expandKeys).then(() => {\n        console.log(`展开第${level}层完成`)\n      })\n    },\n    async expand1 () {\n      this.$refs.virtualTree.unexpandAll()\n      await this.expand(1)\n    },\n    async expand2 () {\n      this.$refs.virtualTree.unexpandAll()\n      await this.expand(1)\n      await this.expand(2)\n    },\n    unexpandAll () {\n      this.$refs.virtualTree.unexpandAll()\n    },\n    expandAll () {\n      this.$refs.virtualTree.expandAll()\n    },\n    async unexpandTarget () {\n      const pathKeys = ['49__@@__1', '120__@@__4200', '114__@@__4201', '2902__@@__4324']\n      const key = await this.$refs.virtualTree.expandPath(pathKeys)\n      key && this.scrollTo(key)\n    },\n    scrollTo (key) {\n      if (key) {\n        const index = this.treeData.findIndex((item) => item['id'] === key)\n        this.$refs.virtualTable.scrollTo(index, 50)\n        const speed = 300\n        // 闪烁效果\n        setTimeout(() => {\n          this.highlightKey = key\n        })\n        setTimeout(() => {\n          this.highlightKey = null\n        }, speed)\n        setTimeout(() => {\n          this.highlightKey = key\n        }, speed * 2)\n        setTimeout(() => {\n          this.highlightKey = null\n        }, speed * 3)\n      }\n    }\n  }\n}\n</script>\n\n<style lang='less'>\n.highlight-row {\n  background-color: #e6f4ff;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VTreeDemo2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VTreeDemo2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VTreeDemo2.vue?vue&type=template&id=42093240&\"\nimport script from \"./VTreeDemo2.vue?vue&type=script&lang=js&\"\nexport * from \"./VTreeDemo2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VTreeDemo2.vue?vue&type=style&index=0&id=42093240&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","on","expand1","_v","expand2","expandAll","unexpandAll","unexpandTarget","ref","attrs","columns","treeData","getRowClassName","x","y","$event","scopedSlots","_u","key","fn","record","onload","_s","id","staticStyle","staticRenderFns","components","AVirtualTable","AVirtualTree","data","customRender","width","title","dataIndex","highlightKey","mounted","methods","initData","product","productId","parent","isRoot","$v_level","setTimeout","resolve","expand","console","scrollTo","speed","component"],"sourceRoot":""}